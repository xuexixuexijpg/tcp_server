name: 构建并发布 Windows 可执行文件

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write  # 提供写入仓库内容的权限，用于创建 Release

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          cache: pip

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 清理之前生成的 exe 文件
        run: |
          if (Test-Path "dist") { Remove-Item -Path "dist" -Recurse -Force }
          if (Test-Path "build") { Remove-Item -Path "build" -Recurse -Force }
          Get-ChildItem -Path "." -Filter "*.exe" | ForEach-Object { Remove-Item -Path $_.FullName -Force }

      - name: 运行构建脚本
        shell: cmd
        run: |
          chcp 65001
          set PYTHONIOENCODING=utf-8
          python build_exe.py
        env:
          PYTHONIOENCODING: utf-8
          PYTHONUTF8: 1

      # 删除旧的 Release
      - name: 删除旧版本 Releases
        uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 0  # 删除所有已存在的 Release
          delete_tags: true  # 同时删除标签
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 创建新的 Release
      - name: 创建 Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest  # 使用固定标签 'latest'
          name: TCP Server 最新版本
          body: |
            构建时间: ${{ github.event.repository.updated_at }}
            提交: ${{ github.sha }}
            
            由 GitHub Actions 自动构建的最新版本
          files: |
            dist/**/*.exe
            *.exe
          prerelease: false
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}